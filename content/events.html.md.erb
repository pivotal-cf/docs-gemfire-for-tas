---
title:  Handling Events
---

 <!-- 
 Copyright (c) VMware, Inc. 2022. All rights reserved.
 Licensed to the Apache Software Foundation (ASF) under one or more contributor license
 agreements. See the NOTICE file distributed with this work for additional information regarding
 copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance with the License. You may obtain a
 copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software distributed under the License
 is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 or implied. See the License for the specific language governing permissions and limitations under
 the License.
 -->

This topic explains discusses events in VMware GemFire for TAS.

<a id="events"></a>

The cluster within a VMware GemFire for Tanzu Application Service service instance can handle events.
An app registers interest in a particular event,
and when the server detects the event,
an app-defined callback (also called a handler or a listener)
is invoked to handle the event.  

There are three aspects to configuring and implementing an event:

- the app defines or specifies the event
- the app registers the event with or identifies the event to
the system component that will detect the event
- the app defines the callback, which handles the event

## <a id="continuous-queries"></a> Continuous Queries

Continuous queries use an OQL query on region data to define an event.
A change in query results is the event.
The app registers both the query and the callback
to set up a continuous query.
Each region operation invokes the query, leading to the naming
of this type of event handling as continuous.

See [Querying with OQL](<%=vars.serverman%>/developing-querying_basics-query_basics.html) for details on the Object Query Language (OQL)
and generating queries.
