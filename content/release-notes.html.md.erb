---
title: VMware GemFire for TAS Release Notes
---

<!-- 
Copyright (c) VMware, Inc. 2022. All rights reserved.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license
agreements. See the NOTICE file distributed with this work for additional information regarding
copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance with the License. You may obtain a
copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License
is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
or implied. See the License for the specific language governing permissions and limitations under
the License.
-->

This topic contains the release notes for VMware GemFire for TAS Release Notes.

## <a id="v2-0-0"></a>v2.0.0

**Release Date:** June 13, 2023

Features included in this release:

Features included in this release:

- VMware GemFire for TAS v2.0 upgrades from v1.14.
- JDK bumped from Java 8 in VMware GemFire for TAS v1.14 has been bumped to Java 11 in GemFire for TAS v2.0. If you use custom JVM parameters in advanced Java 8 configurations that are not supported in Java 11, you may see a `Service broker error` during service instance upgrades. For a workaround, see [Service Broker Error](#service-broker-error) in the Known Issues section below.



- Support for Redis configuration options on service instances of VMware GemFire for Tanzu Application Service. For more information about these options, see [Service Instance Configuration Parameters](redis-api.html#service-instance-configuration) in _Using the VMware GemFire for Redis Apps Add-on_.

- This version of VMware GemFire for Tanzu Application Service runs GemFire 9.15.5.

- This release supports VMware Tanzu Application Service for VMs (TAS) versions 2.7, 2.8, 2.9, 2.10, 2.11, 2.12, 2.13 (partial), 3.0, and v4.0.
   Support for TAS 2.13 is partially compatible. TAS 2.13 contains a breaking change (described in the [TAS 2.13 Release Notes](https://docs.pivotal.io/application-service/2-13/release-notes/runtime-rn.html) with the following recommended workaround:

    "Service instance metrics will not be not retrievable unless users deselect the **Enable Log Cache Syslog Ingestion** checkbox in the System Logging pane of the Tanzu Application Service for VMs tile in Ops Manager."

For VMware Tanzu Application Service for VMs and Ops Manager version compatibility, see [Product Snapshot and Version Compatibility](product-snapshot.html).

### <a id="breaking-changes-v2-0-0"></a>Breaking Changes

#### Metric Keys Renamed

The metric keys listed in [Monitoring VMware GemFire for TAS Service Instances](monitoring.html) have been renamed, with any instance of `.` replaced by `_`.

#### Broker Metrics Renamed

The broker metrics listed in [Monitor Quota Use and Service Instance Count](https://docs.vmware.com/en/VMware-GemFire-for-Tanzu-Application-Service/1.14/gf-tas/content-set-quotas.html#monitor-quota-use-and-service-instance-count-5) in _Setting Service Instance Quotas_
_ have been renamed as follows:

<table>
  <tr>
    <td><code>on-demand-broker/p-cloudcache/quota_remaining</code></td>
    <td><code>_on-demand-broker_p_cloudcache_quota_remaining</code></td>
  </tr>
    <td><code>on-demand-broker/p-cloudcache/PLAN-NAME/quota_remaining</code> </td>
    <td><code>_on-demand-broker_p_cloudcache_PLAN-NAME_quota_remaining</code> </td>
  <tr>
    <td><code>on-demand-broker/p-cloudcache/total_instances</code> </td>
    <td><code>_on-demand-broker_p_cloudcache_total_instances</code> </td>
  </tr>
  <tr>
    <td><code>on-demand-broker/p-cloudcache/PLAN-NAME/total_instances</code> </td>
    <td><code>_on-demand-broker_p_cloudcache_PLAN-NAME_total_instances</code> </td>
   </tr>
</table>

### <a id="known-issues-v2-0-0"></a>Known Issues

#### <a name="service-broker-error"></a>Service Broker Error

If you use custom JVM parameters in advanced Java 8 configurations that are not supported in Java 11, you may see a the following error during manual service instance upgrades or when running the "Upgrade All Service Instances for VMware GemFire for VMs" errand:

```
Service broker error: invalid previous JVM configuration options: [<list of JVM options>], please delete or replace them in the previous deployment
```
Record the <list of JVM options> to use when working around the issue.

To work around this issue:

1. In a terminal window, retrieve the manifest for the affected service instance by running the following command:

    ```
    bosh -d service-instance_$(cf service SERVICE-INSTANCE-NAME --guid)   manifest > manifest.yml
    ```
    Where `SERVICE-INSTANCE-NAME` is the name of the affected service instance.

1. Edit the manifest.yml file that you just created by removing or replacing with the JDK11 equivalent all of the options in the `<list of JVM options>` part of the error message. The same option might appear multiple times.

1. Redeploy the service instance with the modified manifest:

    ```
    bosh -d service-instance_$(cf service SERVICE-INSTANCE-NAME --guid)  deploy manifest.yml
    ```
    Where `SERVICE-INSTANCE-NAME` is the name of the affected service instance.

1. Perform the upgrade:

    ```
    cf update-service <service_instace_name> --upgrade
    ```
    Where `SERVICE-INSTANCE-NAME` is the name of the affected service instance.

