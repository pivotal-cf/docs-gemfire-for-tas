---
title: Using a Service Gateway
---

 <!-- 
 Copyright (c) VMware, Inc. 2022. All rights reserved.
 Licensed to the Apache Software Foundation (ASF) under one or more contributor license
 agreements. See the NOTICE file distributed with this work for additional information regarding
 copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance with the License. You may obtain a
 copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software distributed under the License
 is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 or implied. See the License for the specific language governing permissions and limitations under
 the License.
 -->

The service gateway allows apps that run in a different location than
the Services Foundation where the GemFire for TAS service instance runs
to communicate with the service instance.
At its core, the service gateway is a TCP router.

There are three locations where an app may run.
The locations are defined in
[The App's Location](architecture.html#AppLocation).

Apps that run within an App Foundation and apps that run completely outside of
any foundation must have a service gateway enabled and running
to communicate with the GemFire for TAS service instance.
To enable and run the service instance:

- The operator must
[Configuring a Service Gateway](configure-service-gateway.html).
- The developer must [Provide Optional Parameters](create-instance.html#params)
when creating the GemFire for TAS service instance.
- The app must be given and use properties that authenticate
and authorize [Communicating with a Service Instance](running-app.html#app-location) through the service gateway.
