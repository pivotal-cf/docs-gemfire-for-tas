---
title: An Example Java App
---

 <!--
 Copyright (c) VMware, Inc. 2022. All rights reserved.
 Licensed to the Apache Software Foundation (ASF) under one or more contributor license
 agreements. See the NOTICE file distributed with this work for additional information regarding
 copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance with the License. You may obtain a
 copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software distributed under the License
 is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 or implied. See the License for the specific language governing permissions and limitations under
 the License.
 -->

This topic presents an example Java app to use with VMware GemFire for TAS.

<a id="sample-java-app-connect"></a>

The sample Java client app at
[https://github.com/cf-gemfire-org/cloudcache-sample-app.git](https://github.com/cf-gemfire-org/cloudcache-sample-app.git)
demonstrates how to connect an app to a service instance.

These instructions assume:

-  A GemFire for TAS service instance is running.
-  You have Cloud Foundry credentials for accessing the GemFire for TAS service instance.
-  You have a service key for the GemFire for TAS service instance.
-  You have a login on the Pivotal Commercial Maven Repository
at [https://commercial-repo.pivotal.io](https://commercial-repo.pivotal.io).
-  You have a `gfsh` client of the same version as is used
within your GemFire for TAS service instance.

Follow these instructions to run the app.

1. Clone the sample Java app from [https://github.com/cf-gemfire-org/cloudcache-sample-app.git](https://github.com/cf-gemfire-org/cloudcache-sample-app.git).
1. Update your clone of the sample Java app to work with
your GemFire for TAS service instance:
    - Modify the manifest in `manifest.yml` by replacing `service0` with
    the name of your GemFire for TAS service instance.
    - Replace the username and password in the <code>gradle.properties</code>
    file with your username and password for
    the Pivotal Commercial Maven Repository.
    - Update the VMware GemFire version in the dependencies section of the
    `build.gradle` file to be the same as the version within your GemFire for TAS service
    instance.
1. Build the app with

    ```
    $ ./gradlew clean build
    ```
1. In a second shell, run `gfsh`.
1. Use `gfsh` to connect to the GemFire for TAS service instance as described in
[Connect with gfsh over HTTPS](accessing-instance.html#gfsh-connect-https).
1. Use `gfsh` to create a region named `test` as described in [Create Regions](./using-pcc.html#create-regions).
This sample app places a single entry into the region,
so the region type is not important.
`PARTITION_REDUNDANT` is a good choice.
1. In the shell where the app was built, deploy and run the app with

    ```
    cf push -f manifest.yml
    ```
1. After the app starts, there will be an entry of ("1", "one")
in the <code>test</code> region. you can see that there is one
entry in the region with the `gfsh` command:

    ```
    gfsh>describe region --name=test
    ```
    For this very small region, you can print the contents of the entire
    region with a `gfsh` query:

    ```
    gfsh>query --query='SELECT * FROM /test'
    ```
