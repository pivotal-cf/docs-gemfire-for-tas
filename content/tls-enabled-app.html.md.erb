---
title: Developing an App Under TLS
---

 <!-- 
 Copyright (c) VMware, Inc. 2022. All rights reserved.
 Licensed to the Apache Software Foundation (ASF) under one or more contributor license
 agreements. See the NOTICE file distributed with this work for additional information regarding
 copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance with the License. You may obtain a
 copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software distributed under the License
 is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 or implied. See the License for the specific language governing permissions and limitations under
 the License.
 -->

This topic discusses developing an app under TLS for use with VMware GemFire for TAS.

Apps that connect to a TLS-enabled VMware GemFire for Tanzu Application Service service instance
must set properties to configure the communication with
the cluster components within the GemFire for TAS service instance.

Ensure that the cluster-level prerequisite step of
[Preparing for TLS](prepare-TLS.html) has been completed.

For a Spring Data GemFire app
with a Spring Data GemFire library dependency of
2.2.0.BUILD-SNAPSHOT or a more recent version,
attach the `@EnableSsl` annotation to your configuration class
to enable the TLS encryption for all cluster components.
Also set these properties:

```
ssl-use-default-context=true
ssl-endpoint-identification-enabled=false
```

For other apps, the properties should be

```
ssl-enabled-components=all
ssl-use-default-context=true
ssl-endpoint-identification-enabled=false
```

An app may set these properties with the `ClientCacheFactory.set()` method,
prior to creating a `ClientCache` instance.

The build and `cf push` of the app does not require any changes
to work with a TLS-enabled GemFire for TAS service instance.
